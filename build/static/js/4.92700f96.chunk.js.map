{"version":3,"sources":["Components/FoodCategory.js","Components/CategoryList.js","Components/Foodbox.js","Components/Foodlist.js","Components/Searchbar.js","Components/SearchComponent.js","Clients/places.js"],"names":["FoodCategory","className","this","props","nombre","Component","Foodlist","state","foods","places","foodPlace","match","params","place","foundPlace","find","lugar","console","log","categorias","map","category","index","style","color","key","to","Foodbox","descripcion","precio","param","window","location","pathname","slice","filter","x","inputValue","filterFoods","listOfFoods","filterOnChange","e","setState","target","value","searchValue","toLowerCase","filteredFoods","food","name","includes","categoryFoods","categoryName","foundCategory","data","oneFood","Searchbar","type","onChange","placeholder","arrayOfMenu","push","flattened","flat","SearchComponent","showAdd","tags","i","option1","Places","useState","buscar","setBuscar","Helmet","backgroundColor","font","src","iso","alt","onClick","path","exact","component","CategoryList"],"mappings":"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","file":"static/js/4.92700f96.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class FoodCategory extends Component {\n    render() {\n        return (\n            <div className=\"box\">\n                    <h1>{this.props.nombre}</h1>\n          </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport foods from '../foods.json';\nimport FoodCategory from './FoodCategory';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Foodlist extends Component {\n  state = {\n    foods: foods.places,\n  };\n\n  render() {\n    const foodPlace = this.props.match.params.place;\n    const foundPlace = foods.places.find((lugar) => foodPlace === lugar.place);\n    console.log(foundPlace);\n    return (\n      <div className=\"centered\">\n          <ul className=\"list-food\">\n            {foundPlace.categorias.map((category, index) => {\n              return (\n                  <Link style={{color: foods.color}} key={index} to={`${foundPlace.place}/category/${category.nombre}`}>\n                    <FoodCategory {...category} />\n                  </Link>\n              );\n            })}\n          </ul>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Foodbox extends Component {\n\n  render() {\n    return (\n      <div className=\"food-box\">\n        <div className=\"left-box\">\n          <h4>{this.props.nombre}</h4>\n          <small>{this.props.descripcion}</small>\n        </div>\n        <h5>{this.props.precio}</h5>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport foods from '../foods.json';\nimport Foodbox from './Foodbox';\nimport './../App.css';\n\nconst param = window.location.pathname.slice(1)\nconst foundPlace = foods.places.filter(x => x.place === param)\n\nexport default class Foodlist extends Component {\n  state = {\n    foods: foods.places,\n    inputValue: '',\n    filterFoods: foods.places,\n    listOfFoods: []\n  };\n\n  filterOnChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n    let searchValue = e.target.value.toLowerCase();\n    let filterFoods = [...this.state.foods];\n\n    let filteredFoods = filterFoods.filter((food) =>\n      food.name.toLowerCase().includes(searchValue)\n    );\n\n    this.setState({\n      filterFoods: filteredFoods,\n    });\n  };\n\n  render() {\n    const categoryFoods = this.props.match.params.categoryName;\n    console.log(foundPlace[0])\n    const foundCategory = foundPlace[0].categorias.find((category) => categoryFoods === category.nombre);\n    return (\n      <div className=\"centered\">\n        <div className=\"list-add\">\n          <ul className=\"list-food\">\n            {\n                        foundCategory.data.map((oneFood, index) => {\n                            return (\n                                <Foodbox {...oneFood} key={index}/>\n                            );\n                        })\n                    }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Searchbar extends Component {\n    render() {\n        return (\n            <div>\n                <input className=\"input\" type=\"text\" value={this.props.inputValue} onChange={this.props.filterOnChange} placeholder=\"buscar...\"/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport foods from '../foods.json';\nimport Foodbox from './Foodbox';\nimport Searchbar from './Searchbar';\nimport './../App.css';\n\nconst param = window.location.pathname.slice(1)\nconst foundPlace = foods.places.filter(x => x.place === param)\nconst arrayOfMenu = [];\nfoundPlace[0].categorias.map(x => arrayOfMenu.push(x.data))\nconst flattened = arrayOfMenu.flat()\n\nconsole.log(flattened)\n\nexport default class SearchComponent extends Component {\n  state = {\n    foods: foods,\n    showAdd: false,\n    inputValue: '',\n    listOfFoods: [],\n    filterFoods: flattened\n  };\n\n  filterOnChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n    let searchValue = e.target.value.toLowerCase();\n    let filteredFoods = flattened.filter((food) =>\n      food.nombre.toLowerCase().includes(searchValue) || \n      food.descripcion.toLowerCase().includes(searchValue) ||\n      food.tags.toLowerCase().includes(searchValue)\n    );\n\n    this.setState({\n      filterFoods: filteredFoods,\n    });\n  };\n\n  render() {\n\n    return (\n      <div className=\"centered\">\n        <Searchbar\n          filterOnChange={this.filterOnChange}\n          inputValue={this.state.inputValue}\n        />\n        <div className=\"list-add\">\n          <ul className=\"list-food\">\n          {\n            this.state.filterFoods.map((e, i)=> <Foodbox {...e} key={i} />)\n          }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './../App.css';\nimport CategoryList from '../Components/CategoryList';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Foodlist from '../Components/Foodlist';\nimport SearchComponent from '../Components/SearchComponent';\nimport foods from '../foods.json';\nimport Helmet from 'react-helmet';\n\n\nconst param = window.location.pathname.slice(1)\nconst foundPlace = foods.places.filter(x => x.place === param)\nconst option1 = foundPlace[0].place || '';\nconsole.log(foundPlace);\nfunction Places() {\n  const [buscar, setBuscar] = useState(false);\n\n  return (\n    <div className=\"App\">\n       <Router>\n        <Helmet>\n          <style>{`body { background-color: ${foundPlace[0].backgroundColor}; min-height:100vh; font-family: ${foundPlace[0].font}; color: ${foundPlace[0].color}}`}</style>\n        </Helmet>\n        <Link to={`/${option1}`}>\n          {' '}\n          <img src={foundPlace[0].iso} alt=\"logo\" className=\"isoTipo\" />\n        </Link>\n        <input\n          type=\"button\"\n          onClick={() => setBuscar(!buscar)}\n          value={buscar ? 'volver' : 'buscar'}\n        />\n        {buscar ? (\n          <SearchComponent />\n        ) : (\n          <div>\n            <Route path=\"/:place\" exact component={CategoryList} />\n            <Route path=\"/:place/category/:categoryName\" exact component={Foodlist} />\n          </div>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default Places;"],"sourceRoot":""}