{"ast":null,"code":"var _jsxFileName = \"/Users/mcmilton/Documents/menuApp/Menu-frontend/src/Components/Foodlist.js\";\nimport React, { Component } from 'react';\nimport foods from './../foods.json';\nimport Foodbox from './Foodbox';\nimport Addfood from './Addfood';\nimport Searchbar from './Searchbar';\nimport './../App.css';\nexport default class Foodlist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      foods: foods,\n      showAdd: false,\n      inputValue: '',\n      filterFoods: foods,\n      quantity: 0,\n      totalCalories: 0,\n      listOfFoods: []\n    };\n\n    this.showAdd = () => {\n      this.setState({\n        showAdd: !this.state.showAdd\n      });\n    };\n\n    this.addOneFood = newFoodObj => {\n      const foodCopy = [...this.state.foods];\n      foodCopy.unshift(newFoodObj);\n      this.setState({\n        foods: foodCopy\n      });\n    };\n\n    this.filterOnChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n      let searchValue = e.target.value.toLowerCase();\n      let filterFoods = [...this.state.foods];\n      let filteredFoods = filterFoods.filter(food => food.name.toLowerCase().includes(searchValue));\n      this.setState({\n        filterFoods: filteredFoods\n      });\n    };\n\n    this.sumTheTotal = (totalCalories, name, quantity) => {\n      console.log(quantity);\n      let row = `֍ ${quantity - 1} ${name} ${totalCalories} ֍ `;\n      let listOfFoodsCopy = [...this.state.listOfFoods];\n      listOfFoodsCopy.push(row);\n      let newTotalCalories = this.state.totalCalories;\n      newTotalCalories += parseInt(totalCalories, 10);\n      this.setState({\n        listOfFoods: listOfFoodsCopy,\n        totalCalories: newTotalCalories\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"foodlisth1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Food List\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button centered\",\n      onClick: this.showAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Add a Food\"), this.state.showAdd ? /*#__PURE__*/React.createElement(Addfood, {\n      createFood: this.addOneFood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }) : null, /*#__PURE__*/React.createElement(Searchbar, {\n      filterOnChange: this.filterOnChange,\n      inputValue: this.state.inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, this.state.filterFoods.map((oneFood, index) => {\n      return /*#__PURE__*/React.createElement(Foodbox, Object.assign({\n        key: index\n      }, oneFood, {\n        quantityChange: this.quantityChange,\n        quantity: this.state.quantity,\n        sumTheTotal: this.sumTheTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todaysFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Today's Food\"), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"listOfFoods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, this.state.listOfFoods.map((food, ind) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 42\n        }\n      }, \" \", food);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \" Total  \", this.state.totalCalories, \" Cal.\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mcmilton/Documents/menuApp/Menu-frontend/src/Components/Foodlist.js"],"names":["React","Component","foods","Foodbox","Addfood","Searchbar","Foodlist","state","showAdd","inputValue","filterFoods","quantity","totalCalories","listOfFoods","setState","addOneFood","newFoodObj","foodCopy","unshift","filterOnChange","e","target","value","searchValue","toLowerCase","filteredFoods","filter","food","name","includes","sumTheTotal","console","log","row","listOfFoodsCopy","push","newTotalCalories","parseInt","render","map","oneFood","index","quantityChange","ind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport foods from './../foods.json'\nimport Foodbox from './Foodbox';\nimport Addfood from './Addfood'\nimport Searchbar from './Searchbar';\nimport './../App.css';\n\n\n\nexport default class Foodlist extends Component {\n    state = {\n        foods: foods,\n        showAdd: false,\n        inputValue: '',\n        filterFoods: foods,\n        quantity: 0,\n        totalCalories:0,\n        listOfFoods: []\n\n    }\n\n    showAdd = () => {\n        this.setState({ showAdd: !this.state.showAdd });\n    };\n\n    addOneFood = (newFoodObj) => {\n        const foodCopy = [...this.state.foods];\n        foodCopy.unshift(newFoodObj)\n\n        this.setState({ foods: foodCopy })\n    }\n\n    filterOnChange = e => {\n\n        this.setState({\n            inputValue: e.target.value\n        })\n        let searchValue = e.target.value.toLowerCase()\n        let filterFoods = [...this.state.foods]\n\n        let filteredFoods = filterFoods.filter(food => food.name.toLowerCase().includes(searchValue))\n\n\n        this.setState({\n            filterFoods: filteredFoods\n        })\n    }\n\n    sumTheTotal = (totalCalories,name, quantity) =>{\n        console.log(quantity);\n        let row = `֍ ${quantity-1} ${name} ${totalCalories} ֍ `\n        \n        let listOfFoodsCopy = [...this.state.listOfFoods]\n        listOfFoodsCopy.push(row)\n\n        let newTotalCalories = this.state.totalCalories\n        newTotalCalories += parseInt(totalCalories, 10)\n        this.setState({\n            listOfFoods: listOfFoodsCopy,\n            totalCalories: newTotalCalories\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"centered\">\n\n                <h1 className=\"foodlisth1\">Food List</h1>\n                <button className=\"button centered\" onClick={this.showAdd}>Add a Food</button>\n                {\n                    this.state.showAdd\n                        ? <Addfood createFood={this.addOneFood} />\n                        : null\n                }\n                <Searchbar filterOnChange={this.filterOnChange}\n                    inputValue={this.state.inputValue} />\n                <div className=\"list-add\">\n                <ul>\n                    {\n                        this.state.filterFoods.map((oneFood, index) => {\n                            return (\n                                <Foodbox\n                                key={index}\n                                {...oneFood}\n                                quantityChange={this.quantityChange}\n                                quantity={this.state.quantity}\n                                sumTheTotal={this.sumTheTotal} />\n                            );\n                        })\n                    }\n                </ul>\n                <div className=\"todaysFood\">\n                    <h1>Today's Food</h1>\n                   \n                    <ul id=\"listOfFoods\">\n                        {\n                            this.state.listOfFoods.map((food,ind)=>{\n                                return ( <li key={ind}> {food}</li> )\n                            })\n                        }\n                    </ul>\n                    <br/>\n                    <h3> Total  {this.state.totalCalories} Cal.</h3>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}